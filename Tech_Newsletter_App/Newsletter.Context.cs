//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tech_Newsletter_App
{
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;

    public partial class NewsletterEntities : DbContext /*partial classes can be(added on to) defined outside of the file itself, so that it can be re-created or updated for each separate istance*/
    /*when this class is instantiated(NewsletterEntities); a XML tag was created in the Web.config file ( at the bottom; <connectionStrings><add  name="NewsletterEntities" connectionString=(connectiuonString here)></ConnectionString>*/
    {
        public NewsletterEntities()/*then this constructor is called, and a connection to the database (which is defined in the Web.Config file under <connectionString> for NewsletterEntities) is created.*/
             : base("name=NewsletterEntities")/*This alloows us to make database calls directly through this class, or through the object that we instantiated.*/
        {

        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }

        public virtual DbSet<SignUp> SignUps { get; set; }//DbSet is a type of List: in this case it is a list of the data elements contained in the "SignUps" table in our database
                                                          //If we had more tables in our database, each table would have its own DbSet that would be created and available for us to call anywhere in our program
                                                          //This is so cool because we can use all the data in our database anywhere in the program by referencing the specific DbSet that we need.
                                                          //DbSet is basically a list of all the records in the database
    }
}
///this defines our connection to the database!!!!